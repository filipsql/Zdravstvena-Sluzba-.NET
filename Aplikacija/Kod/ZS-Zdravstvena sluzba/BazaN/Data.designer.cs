#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace BazaN
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="ZdravstveniCentar")]
	public partial class DataDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertPacijent(Pacijent instance);
    partial void UpdatePacijent(Pacijent instance);
    partial void DeletePacijent(Pacijent instance);
    partial void InsertPregled(Pregled instance);
    partial void UpdatePregled(Pregled instance);
    partial void DeletePregled(Pregled instance);
    partial void InsertTerapija(Terapija instance);
    partial void UpdateTerapija(Terapija instance);
    partial void DeleteTerapija(Terapija instance);
    partial void InsertTipZaposlenog(TipZaposlenog instance);
    partial void UpdateTipZaposlenog(TipZaposlenog instance);
    partial void DeleteTipZaposlenog(TipZaposlenog instance);
    partial void InsertUput(Uput instance);
    partial void UpdateUput(Uput instance);
    partial void DeleteUput(Uput instance);
    partial void InsertZaposleni(Zaposleni instance);
    partial void UpdateZaposleni(Zaposleni instance);
    partial void DeleteZaposleni(Zaposleni instance);
    partial void InsertZdravstvenaUstanova(ZdravstvenaUstanova instance);
    partial void UpdateZdravstvenaUstanova(ZdravstvenaUstanova instance);
    partial void DeleteZdravstvenaUstanova(ZdravstvenaUstanova instance);
    #endregion
		
		public DataDataContext() : 
				base(global::BazaN.Properties.Settings.Default.ZdravstveniCentarConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DataDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Pacijent> Pacijents
		{
			get
			{
				return this.GetTable<Pacijent>();
			}
		}
		
		public System.Data.Linq.Table<Pregled> Pregleds
		{
			get
			{
				return this.GetTable<Pregled>();
			}
		}
		
		public System.Data.Linq.Table<Terapija> Terapijas
		{
			get
			{
				return this.GetTable<Terapija>();
			}
		}
		
		public System.Data.Linq.Table<TipZaposlenog> TipZaposlenogs
		{
			get
			{
				return this.GetTable<TipZaposlenog>();
			}
		}
		
		public System.Data.Linq.Table<Uput> Uputs
		{
			get
			{
				return this.GetTable<Uput>();
			}
		}
		
		public System.Data.Linq.Table<Zaposleni> Zaposlenis
		{
			get
			{
				return this.GetTable<Zaposleni>();
			}
		}
		
		public System.Data.Linq.Table<ZdravstvenaUstanova> ZdravstvenaUstanovas
		{
			get
			{
				return this.GetTable<ZdravstvenaUstanova>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Pacijent")]
	public partial class Pacijent : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Ime;
		
		private string _Prezime;
		
		private string _JMBG;
		
		private string _Alergeni;
		
		private int _Id_Lekara;
		
		private EntitySet<Pregled> _Pregleds;
		
		private EntitySet<Terapija> _Terapijas;
		
		private EntitySet<Uput> _Uputs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnImeChanging(string value);
    partial void OnImeChanged();
    partial void OnPrezimeChanging(string value);
    partial void OnPrezimeChanged();
    partial void OnJMBGChanging(string value);
    partial void OnJMBGChanged();
    partial void OnAlergeniChanging(string value);
    partial void OnAlergeniChanged();
    partial void OnId_LekaraChanging(int value);
    partial void OnId_LekaraChanged();
    #endregion
		
		public Pacijent()
		{
			this._Pregleds = new EntitySet<Pregled>(new Action<Pregled>(this.attach_Pregleds), new Action<Pregled>(this.detach_Pregleds));
			this._Terapijas = new EntitySet<Terapija>(new Action<Terapija>(this.attach_Terapijas), new Action<Terapija>(this.detach_Terapijas));
			this._Uputs = new EntitySet<Uput>(new Action<Uput>(this.attach_Uputs), new Action<Uput>(this.detach_Uputs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ime", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Ime
		{
			get
			{
				return this._Ime;
			}
			set
			{
				if ((this._Ime != value))
				{
					this.OnImeChanging(value);
					this.SendPropertyChanging();
					this._Ime = value;
					this.SendPropertyChanged("Ime");
					this.OnImeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Prezime", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Prezime
		{
			get
			{
				return this._Prezime;
			}
			set
			{
				if ((this._Prezime != value))
				{
					this.OnPrezimeChanging(value);
					this.SendPropertyChanging();
					this._Prezime = value;
					this.SendPropertyChanged("Prezime");
					this.OnPrezimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JMBG", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string JMBG
		{
			get
			{
				return this._JMBG;
			}
			set
			{
				if ((this._JMBG != value))
				{
					this.OnJMBGChanging(value);
					this.SendPropertyChanging();
					this._JMBG = value;
					this.SendPropertyChanged("JMBG");
					this.OnJMBGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Alergeni", DbType="NVarChar(500)")]
		public string Alergeni
		{
			get
			{
				return this._Alergeni;
			}
			set
			{
				if ((this._Alergeni != value))
				{
					this.OnAlergeniChanging(value);
					this.SendPropertyChanging();
					this._Alergeni = value;
					this.SendPropertyChanged("Alergeni");
					this.OnAlergeniChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id_Lekara", DbType="Int NOT NULL")]
		public int Id_Lekara
		{
			get
			{
				return this._Id_Lekara;
			}
			set
			{
				if ((this._Id_Lekara != value))
				{
					this.OnId_LekaraChanging(value);
					this.SendPropertyChanging();
					this._Id_Lekara = value;
					this.SendPropertyChanged("Id_Lekara");
					this.OnId_LekaraChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Pacijent_Pregled", Storage="_Pregleds", ThisKey="Id", OtherKey="Id_Pacijenta")]
		public EntitySet<Pregled> Pregleds
		{
			get
			{
				return this._Pregleds;
			}
			set
			{
				this._Pregleds.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Pacijent_Terapija", Storage="_Terapijas", ThisKey="Id", OtherKey="Id_Pacijenta")]
		public EntitySet<Terapija> Terapijas
		{
			get
			{
				return this._Terapijas;
			}
			set
			{
				this._Terapijas.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Pacijent_Uput", Storage="_Uputs", ThisKey="Id", OtherKey="Id_Pacijenta")]
		public EntitySet<Uput> Uputs
		{
			get
			{
				return this._Uputs;
			}
			set
			{
				this._Uputs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Pregleds(Pregled entity)
		{
			this.SendPropertyChanging();
			entity.Pacijent = this;
		}
		
		private void detach_Pregleds(Pregled entity)
		{
			this.SendPropertyChanging();
			entity.Pacijent = null;
		}
		
		private void attach_Terapijas(Terapija entity)
		{
			this.SendPropertyChanging();
			entity.Pacijent = this;
		}
		
		private void detach_Terapijas(Terapija entity)
		{
			this.SendPropertyChanging();
			entity.Pacijent = null;
		}
		
		private void attach_Uputs(Uput entity)
		{
			this.SendPropertyChanging();
			entity.Pacijent = this;
		}
		
		private void detach_Uputs(Uput entity)
		{
			this.SendPropertyChanging();
			entity.Pacijent = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Pregled")]
	public partial class Pregled : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _Id_Lekara;
		
		private int _Id_Pacijenta;
		
		private string _Opis;
		
		private int _Id_ZS;
		
		private System.DateTime _Datum;
		
		private EntityRef<Pacijent> _Pacijent;
		
		private EntityRef<Zaposleni> _Zaposleni;
		
		private EntityRef<ZdravstvenaUstanova> _ZdravstvenaUstanova;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnId_LekaraChanging(int value);
    partial void OnId_LekaraChanged();
    partial void OnId_PacijentaChanging(int value);
    partial void OnId_PacijentaChanged();
    partial void OnOpisChanging(string value);
    partial void OnOpisChanged();
    partial void OnId_ZSChanging(int value);
    partial void OnId_ZSChanged();
    partial void OnDatumChanging(System.DateTime value);
    partial void OnDatumChanged();
    #endregion
		
		public Pregled()
		{
			this._Pacijent = default(EntityRef<Pacijent>);
			this._Zaposleni = default(EntityRef<Zaposleni>);
			this._ZdravstvenaUstanova = default(EntityRef<ZdravstvenaUstanova>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id_Lekara", DbType="Int NOT NULL")]
		public int Id_Lekara
		{
			get
			{
				return this._Id_Lekara;
			}
			set
			{
				if ((this._Id_Lekara != value))
				{
					if (this._Zaposleni.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnId_LekaraChanging(value);
					this.SendPropertyChanging();
					this._Id_Lekara = value;
					this.SendPropertyChanged("Id_Lekara");
					this.OnId_LekaraChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id_Pacijenta", DbType="Int NOT NULL")]
		public int Id_Pacijenta
		{
			get
			{
				return this._Id_Pacijenta;
			}
			set
			{
				if ((this._Id_Pacijenta != value))
				{
					if (this._Pacijent.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnId_PacijentaChanging(value);
					this.SendPropertyChanging();
					this._Id_Pacijenta = value;
					this.SendPropertyChanged("Id_Pacijenta");
					this.OnId_PacijentaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Opis", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		public string Opis
		{
			get
			{
				return this._Opis;
			}
			set
			{
				if ((this._Opis != value))
				{
					this.OnOpisChanging(value);
					this.SendPropertyChanging();
					this._Opis = value;
					this.SendPropertyChanged("Opis");
					this.OnOpisChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id_ZS", DbType="Int NOT NULL")]
		public int Id_ZS
		{
			get
			{
				return this._Id_ZS;
			}
			set
			{
				if ((this._Id_ZS != value))
				{
					if (this._ZdravstvenaUstanova.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnId_ZSChanging(value);
					this.SendPropertyChanging();
					this._Id_ZS = value;
					this.SendPropertyChanged("Id_ZS");
					this.OnId_ZSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Datum", DbType="DateTime NOT NULL")]
		public System.DateTime Datum
		{
			get
			{
				return this._Datum;
			}
			set
			{
				if ((this._Datum != value))
				{
					this.OnDatumChanging(value);
					this.SendPropertyChanging();
					this._Datum = value;
					this.SendPropertyChanged("Datum");
					this.OnDatumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Pacijent_Pregled", Storage="_Pacijent", ThisKey="Id_Pacijenta", OtherKey="Id", IsForeignKey=true)]
		public Pacijent Pacijent
		{
			get
			{
				return this._Pacijent.Entity;
			}
			set
			{
				Pacijent previousValue = this._Pacijent.Entity;
				if (((previousValue != value) 
							|| (this._Pacijent.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Pacijent.Entity = null;
						previousValue.Pregleds.Remove(this);
					}
					this._Pacijent.Entity = value;
					if ((value != null))
					{
						value.Pregleds.Add(this);
						this._Id_Pacijenta = value.Id;
					}
					else
					{
						this._Id_Pacijenta = default(int);
					}
					this.SendPropertyChanged("Pacijent");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Zaposleni_Pregled", Storage="_Zaposleni", ThisKey="Id_Lekara", OtherKey="Id", IsForeignKey=true)]
		public Zaposleni Zaposleni
		{
			get
			{
				return this._Zaposleni.Entity;
			}
			set
			{
				Zaposleni previousValue = this._Zaposleni.Entity;
				if (((previousValue != value) 
							|| (this._Zaposleni.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Zaposleni.Entity = null;
						previousValue.Pregleds.Remove(this);
					}
					this._Zaposleni.Entity = value;
					if ((value != null))
					{
						value.Pregleds.Add(this);
						this._Id_Lekara = value.Id;
					}
					else
					{
						this._Id_Lekara = default(int);
					}
					this.SendPropertyChanged("Zaposleni");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ZdravstvenaUstanova_Pregled", Storage="_ZdravstvenaUstanova", ThisKey="Id_ZS", OtherKey="Id", IsForeignKey=true)]
		public ZdravstvenaUstanova ZdravstvenaUstanova
		{
			get
			{
				return this._ZdravstvenaUstanova.Entity;
			}
			set
			{
				ZdravstvenaUstanova previousValue = this._ZdravstvenaUstanova.Entity;
				if (((previousValue != value) 
							|| (this._ZdravstvenaUstanova.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ZdravstvenaUstanova.Entity = null;
						previousValue.Pregleds.Remove(this);
					}
					this._ZdravstvenaUstanova.Entity = value;
					if ((value != null))
					{
						value.Pregleds.Add(this);
						this._Id_ZS = value.Id;
					}
					else
					{
						this._Id_ZS = default(int);
					}
					this.SendPropertyChanged("ZdravstvenaUstanova");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Terapija")]
	public partial class Terapija : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _Id_Lekara;
		
		private int _Id_Pacijenta;
		
		private string _Opis;
		
		private System.DateTime _Datum;
		
		private string _Dijagnoza;
		
		private EntityRef<Pacijent> _Pacijent;
		
		private EntityRef<Zaposleni> _Zaposleni;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnId_LekaraChanging(int value);
    partial void OnId_LekaraChanged();
    partial void OnId_PacijentaChanging(int value);
    partial void OnId_PacijentaChanged();
    partial void OnOpisChanging(string value);
    partial void OnOpisChanged();
    partial void OnDatumChanging(System.DateTime value);
    partial void OnDatumChanged();
    partial void OnDijagnozaChanging(string value);
    partial void OnDijagnozaChanged();
    #endregion
		
		public Terapija()
		{
			this._Pacijent = default(EntityRef<Pacijent>);
			this._Zaposleni = default(EntityRef<Zaposleni>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id_Lekara", DbType="Int NOT NULL")]
		public int Id_Lekara
		{
			get
			{
				return this._Id_Lekara;
			}
			set
			{
				if ((this._Id_Lekara != value))
				{
					if (this._Zaposleni.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnId_LekaraChanging(value);
					this.SendPropertyChanging();
					this._Id_Lekara = value;
					this.SendPropertyChanged("Id_Lekara");
					this.OnId_LekaraChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id_Pacijenta", DbType="Int NOT NULL")]
		public int Id_Pacijenta
		{
			get
			{
				return this._Id_Pacijenta;
			}
			set
			{
				if ((this._Id_Pacijenta != value))
				{
					if (this._Pacijent.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnId_PacijentaChanging(value);
					this.SendPropertyChanging();
					this._Id_Pacijenta = value;
					this.SendPropertyChanged("Id_Pacijenta");
					this.OnId_PacijentaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Opis", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		public string Opis
		{
			get
			{
				return this._Opis;
			}
			set
			{
				if ((this._Opis != value))
				{
					this.OnOpisChanging(value);
					this.SendPropertyChanging();
					this._Opis = value;
					this.SendPropertyChanged("Opis");
					this.OnOpisChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Datum", DbType="DateTime NOT NULL")]
		public System.DateTime Datum
		{
			get
			{
				return this._Datum;
			}
			set
			{
				if ((this._Datum != value))
				{
					this.OnDatumChanging(value);
					this.SendPropertyChanging();
					this._Datum = value;
					this.SendPropertyChanged("Datum");
					this.OnDatumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Dijagnoza", DbType="NVarChar(250) NOT NULL", CanBeNull=false)]
		public string Dijagnoza
		{
			get
			{
				return this._Dijagnoza;
			}
			set
			{
				if ((this._Dijagnoza != value))
				{
					this.OnDijagnozaChanging(value);
					this.SendPropertyChanging();
					this._Dijagnoza = value;
					this.SendPropertyChanged("Dijagnoza");
					this.OnDijagnozaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Pacijent_Terapija", Storage="_Pacijent", ThisKey="Id_Pacijenta", OtherKey="Id", IsForeignKey=true)]
		public Pacijent Pacijent
		{
			get
			{
				return this._Pacijent.Entity;
			}
			set
			{
				Pacijent previousValue = this._Pacijent.Entity;
				if (((previousValue != value) 
							|| (this._Pacijent.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Pacijent.Entity = null;
						previousValue.Terapijas.Remove(this);
					}
					this._Pacijent.Entity = value;
					if ((value != null))
					{
						value.Terapijas.Add(this);
						this._Id_Pacijenta = value.Id;
					}
					else
					{
						this._Id_Pacijenta = default(int);
					}
					this.SendPropertyChanged("Pacijent");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Zaposleni_Terapija", Storage="_Zaposleni", ThisKey="Id_Lekara", OtherKey="Id", IsForeignKey=true)]
		public Zaposleni Zaposleni
		{
			get
			{
				return this._Zaposleni.Entity;
			}
			set
			{
				Zaposleni previousValue = this._Zaposleni.Entity;
				if (((previousValue != value) 
							|| (this._Zaposleni.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Zaposleni.Entity = null;
						previousValue.Terapijas.Remove(this);
					}
					this._Zaposleni.Entity = value;
					if ((value != null))
					{
						value.Terapijas.Add(this);
						this._Id_Lekara = value.Id;
					}
					else
					{
						this._Id_Lekara = default(int);
					}
					this.SendPropertyChanged("Zaposleni");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TipZaposlenog")]
	public partial class TipZaposlenog : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _TipZ;
		
		private string _Opis;
		
		private EntitySet<Zaposleni> _Zaposlenis;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnTipZChanging(string value);
    partial void OnTipZChanged();
    partial void OnOpisChanging(string value);
    partial void OnOpisChanged();
    #endregion
		
		public TipZaposlenog()
		{
			this._Zaposlenis = new EntitySet<Zaposleni>(new Action<Zaposleni>(this.attach_Zaposlenis), new Action<Zaposleni>(this.detach_Zaposlenis));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TipZ", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string TipZ
		{
			get
			{
				return this._TipZ;
			}
			set
			{
				if ((this._TipZ != value))
				{
					this.OnTipZChanging(value);
					this.SendPropertyChanging();
					this._TipZ = value;
					this.SendPropertyChanged("TipZ");
					this.OnTipZChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Opis", DbType="NVarChar(50)")]
		public string Opis
		{
			get
			{
				return this._Opis;
			}
			set
			{
				if ((this._Opis != value))
				{
					this.OnOpisChanging(value);
					this.SendPropertyChanging();
					this._Opis = value;
					this.SendPropertyChanged("Opis");
					this.OnOpisChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TipZaposlenog_Zaposleni", Storage="_Zaposlenis", ThisKey="Id", OtherKey="Tip")]
		public EntitySet<Zaposleni> Zaposlenis
		{
			get
			{
				return this._Zaposlenis;
			}
			set
			{
				this._Zaposlenis.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Zaposlenis(Zaposleni entity)
		{
			this.SendPropertyChanging();
			entity.TipZaposlenog = this;
		}
		
		private void detach_Zaposlenis(Zaposleni entity)
		{
			this.SendPropertyChanging();
			entity.TipZaposlenog = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Uput")]
	public partial class Uput : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private int _Id_Lekara;
		
		private int _Id_Pacijenta;
		
		private string _Opis;
		
		private int _Id_ZS;
		
		private System.DateTime _Datum;
		
		private EntityRef<Pacijent> _Pacijent;
		
		private EntityRef<Zaposleni> _Zaposleni;
		
		private EntityRef<ZdravstvenaUstanova> _ZdravstvenaUstanova;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnId_LekaraChanging(int value);
    partial void OnId_LekaraChanged();
    partial void OnId_PacijentaChanging(int value);
    partial void OnId_PacijentaChanged();
    partial void OnOpisChanging(string value);
    partial void OnOpisChanged();
    partial void OnId_ZSChanging(int value);
    partial void OnId_ZSChanged();
    partial void OnDatumChanging(System.DateTime value);
    partial void OnDatumChanged();
    #endregion
		
		public Uput()
		{
			this._Pacijent = default(EntityRef<Pacijent>);
			this._Zaposleni = default(EntityRef<Zaposleni>);
			this._ZdravstvenaUstanova = default(EntityRef<ZdravstvenaUstanova>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id_Lekara", DbType="Int NOT NULL")]
		public int Id_Lekara
		{
			get
			{
				return this._Id_Lekara;
			}
			set
			{
				if ((this._Id_Lekara != value))
				{
					if (this._Zaposleni.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnId_LekaraChanging(value);
					this.SendPropertyChanging();
					this._Id_Lekara = value;
					this.SendPropertyChanged("Id_Lekara");
					this.OnId_LekaraChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id_Pacijenta", DbType="Int NOT NULL")]
		public int Id_Pacijenta
		{
			get
			{
				return this._Id_Pacijenta;
			}
			set
			{
				if ((this._Id_Pacijenta != value))
				{
					if (this._Pacijent.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnId_PacijentaChanging(value);
					this.SendPropertyChanging();
					this._Id_Pacijenta = value;
					this.SendPropertyChanged("Id_Pacijenta");
					this.OnId_PacijentaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Opis", DbType="NVarChar(250)")]
		public string Opis
		{
			get
			{
				return this._Opis;
			}
			set
			{
				if ((this._Opis != value))
				{
					this.OnOpisChanging(value);
					this.SendPropertyChanging();
					this._Opis = value;
					this.SendPropertyChanged("Opis");
					this.OnOpisChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id_ZS", DbType="Int NOT NULL")]
		public int Id_ZS
		{
			get
			{
				return this._Id_ZS;
			}
			set
			{
				if ((this._Id_ZS != value))
				{
					if (this._ZdravstvenaUstanova.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnId_ZSChanging(value);
					this.SendPropertyChanging();
					this._Id_ZS = value;
					this.SendPropertyChanged("Id_ZS");
					this.OnId_ZSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Datum", DbType="DateTime NOT NULL")]
		public System.DateTime Datum
		{
			get
			{
				return this._Datum;
			}
			set
			{
				if ((this._Datum != value))
				{
					this.OnDatumChanging(value);
					this.SendPropertyChanging();
					this._Datum = value;
					this.SendPropertyChanged("Datum");
					this.OnDatumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Pacijent_Uput", Storage="_Pacijent", ThisKey="Id_Pacijenta", OtherKey="Id", IsForeignKey=true)]
		public Pacijent Pacijent
		{
			get
			{
				return this._Pacijent.Entity;
			}
			set
			{
				Pacijent previousValue = this._Pacijent.Entity;
				if (((previousValue != value) 
							|| (this._Pacijent.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Pacijent.Entity = null;
						previousValue.Uputs.Remove(this);
					}
					this._Pacijent.Entity = value;
					if ((value != null))
					{
						value.Uputs.Add(this);
						this._Id_Pacijenta = value.Id;
					}
					else
					{
						this._Id_Pacijenta = default(int);
					}
					this.SendPropertyChanged("Pacijent");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Zaposleni_Uput", Storage="_Zaposleni", ThisKey="Id_Lekara", OtherKey="Id", IsForeignKey=true)]
		public Zaposleni Zaposleni
		{
			get
			{
				return this._Zaposleni.Entity;
			}
			set
			{
				Zaposleni previousValue = this._Zaposleni.Entity;
				if (((previousValue != value) 
							|| (this._Zaposleni.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Zaposleni.Entity = null;
						previousValue.Uputs.Remove(this);
					}
					this._Zaposleni.Entity = value;
					if ((value != null))
					{
						value.Uputs.Add(this);
						this._Id_Lekara = value.Id;
					}
					else
					{
						this._Id_Lekara = default(int);
					}
					this.SendPropertyChanged("Zaposleni");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ZdravstvenaUstanova_Uput", Storage="_ZdravstvenaUstanova", ThisKey="Id_ZS", OtherKey="Id", IsForeignKey=true)]
		public ZdravstvenaUstanova ZdravstvenaUstanova
		{
			get
			{
				return this._ZdravstvenaUstanova.Entity;
			}
			set
			{
				ZdravstvenaUstanova previousValue = this._ZdravstvenaUstanova.Entity;
				if (((previousValue != value) 
							|| (this._ZdravstvenaUstanova.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ZdravstvenaUstanova.Entity = null;
						previousValue.Uputs.Remove(this);
					}
					this._ZdravstvenaUstanova.Entity = value;
					if ((value != null))
					{
						value.Uputs.Add(this);
						this._Id_ZS = value.Id;
					}
					else
					{
						this._Id_ZS = default(int);
					}
					this.SendPropertyChanged("ZdravstvenaUstanova");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Zaposleni")]
	public partial class Zaposleni : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Ime;
		
		private string _Prezime;
		
		private string _JMBG;
		
		private string _Username;
		
		private string _Password;
		
		private int _Tip;
		
		private bool _Radi;
		
		private bool _Smena;
		
		private int _Id_ZS;
		
		private EntitySet<Pregled> _Pregleds;
		
		private EntitySet<Terapija> _Terapijas;
		
		private EntitySet<Uput> _Uputs;
		
		private EntityRef<TipZaposlenog> _TipZaposlenog;
		
		private EntityRef<ZdravstvenaUstanova> _ZdravstvenaUstanova;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnImeChanging(string value);
    partial void OnImeChanged();
    partial void OnPrezimeChanging(string value);
    partial void OnPrezimeChanged();
    partial void OnJMBGChanging(string value);
    partial void OnJMBGChanged();
    partial void OnUsernameChanging(string value);
    partial void OnUsernameChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnTipChanging(int value);
    partial void OnTipChanged();
    partial void OnRadiChanging(bool value);
    partial void OnRadiChanged();
    partial void OnSmenaChanging(bool value);
    partial void OnSmenaChanged();
    partial void OnId_ZSChanging(int value);
    partial void OnId_ZSChanged();
    #endregion
		
		public Zaposleni()
		{
			this._Pregleds = new EntitySet<Pregled>(new Action<Pregled>(this.attach_Pregleds), new Action<Pregled>(this.detach_Pregleds));
			this._Terapijas = new EntitySet<Terapija>(new Action<Terapija>(this.attach_Terapijas), new Action<Terapija>(this.detach_Terapijas));
			this._Uputs = new EntitySet<Uput>(new Action<Uput>(this.attach_Uputs), new Action<Uput>(this.detach_Uputs));
			this._TipZaposlenog = default(EntityRef<TipZaposlenog>);
			this._ZdravstvenaUstanova = default(EntityRef<ZdravstvenaUstanova>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ime", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Ime
		{
			get
			{
				return this._Ime;
			}
			set
			{
				if ((this._Ime != value))
				{
					this.OnImeChanging(value);
					this.SendPropertyChanging();
					this._Ime = value;
					this.SendPropertyChanged("Ime");
					this.OnImeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Prezime", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Prezime
		{
			get
			{
				return this._Prezime;
			}
			set
			{
				if ((this._Prezime != value))
				{
					this.OnPrezimeChanging(value);
					this.SendPropertyChanging();
					this._Prezime = value;
					this.SendPropertyChanged("Prezime");
					this.OnPrezimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JMBG", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string JMBG
		{
			get
			{
				return this._JMBG;
			}
			set
			{
				if ((this._JMBG != value))
				{
					this.OnJMBGChanging(value);
					this.SendPropertyChanging();
					this._JMBG = value;
					this.SendPropertyChanged("JMBG");
					this.OnJMBGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Username", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Username
		{
			get
			{
				return this._Username;
			}
			set
			{
				if ((this._Username != value))
				{
					this.OnUsernameChanging(value);
					this.SendPropertyChanging();
					this._Username = value;
					this.SendPropertyChanged("Username");
					this.OnUsernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tip", DbType="Int NOT NULL")]
		public int Tip
		{
			get
			{
				return this._Tip;
			}
			set
			{
				if ((this._Tip != value))
				{
					if (this._TipZaposlenog.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnTipChanging(value);
					this.SendPropertyChanging();
					this._Tip = value;
					this.SendPropertyChanged("Tip");
					this.OnTipChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Radi", DbType="Bit NOT NULL")]
		public bool Radi
		{
			get
			{
				return this._Radi;
			}
			set
			{
				if ((this._Radi != value))
				{
					this.OnRadiChanging(value);
					this.SendPropertyChanging();
					this._Radi = value;
					this.SendPropertyChanged("Radi");
					this.OnRadiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Smena", DbType="Bit NOT NULL")]
		public bool Smena
		{
			get
			{
				return this._Smena;
			}
			set
			{
				if ((this._Smena != value))
				{
					this.OnSmenaChanging(value);
					this.SendPropertyChanging();
					this._Smena = value;
					this.SendPropertyChanged("Smena");
					this.OnSmenaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id_ZS", DbType="Int NOT NULL")]
		public int Id_ZS
		{
			get
			{
				return this._Id_ZS;
			}
			set
			{
				if ((this._Id_ZS != value))
				{
					if (this._ZdravstvenaUstanova.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnId_ZSChanging(value);
					this.SendPropertyChanging();
					this._Id_ZS = value;
					this.SendPropertyChanged("Id_ZS");
					this.OnId_ZSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Zaposleni_Pregled", Storage="_Pregleds", ThisKey="Id", OtherKey="Id_Lekara")]
		public EntitySet<Pregled> Pregleds
		{
			get
			{
				return this._Pregleds;
			}
			set
			{
				this._Pregleds.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Zaposleni_Terapija", Storage="_Terapijas", ThisKey="Id", OtherKey="Id_Lekara")]
		public EntitySet<Terapija> Terapijas
		{
			get
			{
				return this._Terapijas;
			}
			set
			{
				this._Terapijas.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Zaposleni_Uput", Storage="_Uputs", ThisKey="Id", OtherKey="Id_Lekara")]
		public EntitySet<Uput> Uputs
		{
			get
			{
				return this._Uputs;
			}
			set
			{
				this._Uputs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TipZaposlenog_Zaposleni", Storage="_TipZaposlenog", ThisKey="Tip", OtherKey="Id", IsForeignKey=true)]
		public TipZaposlenog TipZaposlenog
		{
			get
			{
				return this._TipZaposlenog.Entity;
			}
			set
			{
				TipZaposlenog previousValue = this._TipZaposlenog.Entity;
				if (((previousValue != value) 
							|| (this._TipZaposlenog.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TipZaposlenog.Entity = null;
						previousValue.Zaposlenis.Remove(this);
					}
					this._TipZaposlenog.Entity = value;
					if ((value != null))
					{
						value.Zaposlenis.Add(this);
						this._Tip = value.Id;
					}
					else
					{
						this._Tip = default(int);
					}
					this.SendPropertyChanged("TipZaposlenog");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ZdravstvenaUstanova_Zaposleni", Storage="_ZdravstvenaUstanova", ThisKey="Id_ZS", OtherKey="Id", IsForeignKey=true)]
		public ZdravstvenaUstanova ZdravstvenaUstanova
		{
			get
			{
				return this._ZdravstvenaUstanova.Entity;
			}
			set
			{
				ZdravstvenaUstanova previousValue = this._ZdravstvenaUstanova.Entity;
				if (((previousValue != value) 
							|| (this._ZdravstvenaUstanova.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ZdravstvenaUstanova.Entity = null;
						previousValue.Zaposlenis.Remove(this);
					}
					this._ZdravstvenaUstanova.Entity = value;
					if ((value != null))
					{
						value.Zaposlenis.Add(this);
						this._Id_ZS = value.Id;
					}
					else
					{
						this._Id_ZS = default(int);
					}
					this.SendPropertyChanged("ZdravstvenaUstanova");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Pregleds(Pregled entity)
		{
			this.SendPropertyChanging();
			entity.Zaposleni = this;
		}
		
		private void detach_Pregleds(Pregled entity)
		{
			this.SendPropertyChanging();
			entity.Zaposleni = null;
		}
		
		private void attach_Terapijas(Terapija entity)
		{
			this.SendPropertyChanging();
			entity.Zaposleni = this;
		}
		
		private void detach_Terapijas(Terapija entity)
		{
			this.SendPropertyChanging();
			entity.Zaposleni = null;
		}
		
		private void attach_Uputs(Uput entity)
		{
			this.SendPropertyChanging();
			entity.Zaposleni = this;
		}
		
		private void detach_Uputs(Uput entity)
		{
			this.SendPropertyChanging();
			entity.Zaposleni = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ZdravstvenaUstanova")]
	public partial class ZdravstvenaUstanova : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Naziv;
		
		private string _Adresa;
		
		private string _Grad;
		
		private EntitySet<Pregled> _Pregleds;
		
		private EntitySet<Uput> _Uputs;
		
		private EntitySet<Zaposleni> _Zaposlenis;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNazivChanging(string value);
    partial void OnNazivChanged();
    partial void OnAdresaChanging(string value);
    partial void OnAdresaChanged();
    partial void OnGradChanging(string value);
    partial void OnGradChanged();
    #endregion
		
		public ZdravstvenaUstanova()
		{
			this._Pregleds = new EntitySet<Pregled>(new Action<Pregled>(this.attach_Pregleds), new Action<Pregled>(this.detach_Pregleds));
			this._Uputs = new EntitySet<Uput>(new Action<Uput>(this.attach_Uputs), new Action<Uput>(this.detach_Uputs));
			this._Zaposlenis = new EntitySet<Zaposleni>(new Action<Zaposleni>(this.attach_Zaposlenis), new Action<Zaposleni>(this.detach_Zaposlenis));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Naziv", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Naziv
		{
			get
			{
				return this._Naziv;
			}
			set
			{
				if ((this._Naziv != value))
				{
					this.OnNazivChanging(value);
					this.SendPropertyChanging();
					this._Naziv = value;
					this.SendPropertyChanged("Naziv");
					this.OnNazivChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Adresa", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Adresa
		{
			get
			{
				return this._Adresa;
			}
			set
			{
				if ((this._Adresa != value))
				{
					this.OnAdresaChanging(value);
					this.SendPropertyChanging();
					this._Adresa = value;
					this.SendPropertyChanged("Adresa");
					this.OnAdresaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Grad", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Grad
		{
			get
			{
				return this._Grad;
			}
			set
			{
				if ((this._Grad != value))
				{
					this.OnGradChanging(value);
					this.SendPropertyChanging();
					this._Grad = value;
					this.SendPropertyChanged("Grad");
					this.OnGradChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ZdravstvenaUstanova_Pregled", Storage="_Pregleds", ThisKey="Id", OtherKey="Id_ZS")]
		public EntitySet<Pregled> Pregleds
		{
			get
			{
				return this._Pregleds;
			}
			set
			{
				this._Pregleds.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ZdravstvenaUstanova_Uput", Storage="_Uputs", ThisKey="Id", OtherKey="Id_ZS")]
		public EntitySet<Uput> Uputs
		{
			get
			{
				return this._Uputs;
			}
			set
			{
				this._Uputs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ZdravstvenaUstanova_Zaposleni", Storage="_Zaposlenis", ThisKey="Id", OtherKey="Id_ZS")]
		public EntitySet<Zaposleni> Zaposlenis
		{
			get
			{
				return this._Zaposlenis;
			}
			set
			{
				this._Zaposlenis.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Pregleds(Pregled entity)
		{
			this.SendPropertyChanging();
			entity.ZdravstvenaUstanova = this;
		}
		
		private void detach_Pregleds(Pregled entity)
		{
			this.SendPropertyChanging();
			entity.ZdravstvenaUstanova = null;
		}
		
		private void attach_Uputs(Uput entity)
		{
			this.SendPropertyChanging();
			entity.ZdravstvenaUstanova = this;
		}
		
		private void detach_Uputs(Uput entity)
		{
			this.SendPropertyChanging();
			entity.ZdravstvenaUstanova = null;
		}
		
		private void attach_Zaposlenis(Zaposleni entity)
		{
			this.SendPropertyChanging();
			entity.ZdravstvenaUstanova = this;
		}
		
		private void detach_Zaposlenis(Zaposleni entity)
		{
			this.SendPropertyChanging();
			entity.ZdravstvenaUstanova = null;
		}
	}
}
#pragma warning restore 1591
